PS C:\FPC\c_activity_sets\set03> gcc problem06.c -O0 -g
PS C:\FPC\c_activity_sets\set03> gdb a.exe
GNU gdb (GDB) 7.6.1
Copyright (C) 2013 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "mingw32".
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>...
Reading symbols from C:\FPC\c_activity_sets\set03\a.exe...done.
(gdb) l
2       #include <string.h>
3
4       void input_string(char* a, char* b);
5       int sub_str_index(char* string, char* substring);
6       void output(char *string, char *substring, int index);
7
8       int main()
9       {
10          char string[100], substring[100];
11          input_string(string, substring);
(gdb) b main
Breakpoint 1 at 0x401471: file problem06.c, line 11.
(gdb) r
Starting program: C:\FPC\c_activity_sets\set03/a.exe 
[New Thread 5320.0x3160]
[New Thread 5320.0x31a0]

Breakpoint 1, main () at problem06.c:11
11          input_string(string, substring);
(gdb) n
Enter a string: helloworldhello
Enter the substring: world
12          int index = sub_str_index(string, substring);
(gdb) step
sub_str_index (string=0x61feb8 "helloworldhello", substring=0x61fe54 "world") at problem06.c:27
27          int stringlength = 0;
(gdb) n
28          for (int i = 0; string[stringlength] != '\0'; i++)
(gdb) n
30              stringlength++;
(gdb) n
28          for (int i = 0; string[stringlength] != '\0'; i++)
(gdb) n
30              stringlength++;
(gdb) n
28          for (int i = 0; string[stringlength] != '\0'; i++)
(gdb) n
30              stringlength++;
(gdb) n
28          for (int i = 0; string[stringlength] != '\0'; i++)
(gdb) n
30              stringlength++;
(gdb) n
28          for (int i = 0; string[stringlength] != '\0'; i++)
(gdb) n
30              stringlength++;
(gdb) n
28          for (int i = 0; string[stringlength] != '\0'; i++)
(gdb) n
30              stringlength++;
(gdb) n
28          for (int i = 0; string[stringlength] != '\0'; i++)
(gdb) n
30              stringlength++;
(gdb) n
28          for (int i = 0; string[stringlength] != '\0'; i++)
(gdb) n
30              stringlength++;
(gdb) n
28          for (int i = 0; string[stringlength] != '\0'; i++)
(gdb) n
30              stringlength++;
(gdb) n
28          for (int i = 0; string[stringlength] != '\0'; i++)
(gdb) n
30              stringlength++;
(gdb) n
28          for (int i = 0; string[stringlength] != '\0'; i++)
(gdb) n
30              stringlength++;
(gdb) n
28          for (int i = 0; string[stringlength] != '\0'; i++)
(gdb) n
30              stringlength++;
(gdb) n
28          for (int i = 0; string[stringlength] != '\0'; i++)
(gdb) n
30              stringlength++;
(gdb) n
28          for (int i = 0; string[stringlength] != '\0'; i++)
(gdb) n
30              stringlength++;
(gdb) n
28          for (int i = 0; string[stringlength] != '\0'; i++)
(gdb) n
30              stringlength++;
(gdb) n
28          for (int i = 0; string[stringlength] != '\0'; i++)
(gdb) n
33          int substringlength = 0;
(gdb) n
34          for (int j = 0; substring[substringlength] != '\0'; j++)
(gdb) n
36              substringlength++;
(gdb) n
34          for (int j = 0; substring[substringlength] != '\0'; j++)
(gdb) n
36              substringlength++;
(gdb) n
34          for (int j = 0; substring[substringlength] != '\0'; j++)
(gdb) n
36              substringlength++;
(gdb) n
34          for (int j = 0; substring[substringlength] != '\0'; j++)
(gdb) n
36              substringlength++;
(gdb) n
34          for (int j = 0; substring[substringlength] != '\0'; j++)
(gdb) n
36              substringlength++;
(gdb) n
34          for (int j = 0; substring[substringlength] != '\0'; j++)
(gdb) n
38          for (int k = 0; k <= stringlength - substringlength; k++)
(gdb) n
41              for (l = 0; l < substringlength; l++)
(gdb) n
43                  if (string[k + l] != substring[l])
(gdb) n
45                      break;
(gdb) n
48                  if (l == substringlength)
(gdb) n
38          for (int k = 0; k <= stringlength - substringlength; k++)
(gdb) n
41              for (l = 0; l < substringlength; l++)
(gdb) n
43                  if (string[k + l] != substring[l])
(gdb) n
45                      break;
(gdb) n
48                  if (l == substringlength)
(gdb) n
38          for (int k = 0; k <= stringlength - substringlength; k++)
(gdb) n
41              for (l = 0; l < substringlength; l++)
(gdb) n
43                  if (string[k + l] != substring[l])
(gdb) n
45                      break;
(gdb) n
48                  if (l == substringlength)
(gdb) n
38          for (int k = 0; k <= stringlength - substringlength; k++)
(gdb) n
41              for (l = 0; l < substringlength; l++)
(gdb) n
43                  if (string[k + l] != substring[l])
(gdb) n
45                      break;
(gdb) n
48                  if (l == substringlength)
(gdb) n
38          for (int k = 0; k <= stringlength - substringlength; k++)
(gdb) n
41              for (l = 0; l < substringlength; l++)
(gdb) n
43                  if (string[k + l] != substring[l])
(gdb) n
45                      break;
(gdb) n
48                  if (l == substringlength)
(gdb) n
38          for (int k = 0; k <= stringlength - substringlength; k++)
(gdb) n
41              for (l = 0; l < substringlength; l++)
(gdb) n
43                  if (string[k + l] != substring[l])
(gdb) n
41              for (l = 0; l < substringlength; l++)
(gdb) n
43                  if (string[k + l] != substring[l])
(gdb) n
41              for (l = 0; l < substringlength; l++)
(gdb) n
43                  if (string[k + l] != substring[l])
(gdb) n
41              for (l = 0; l < substringlength; l++)
(gdb) n
43                  if (string[k + l] != substring[l])
(gdb) n
41              for (l = 0; l < substringlength; l++)
(gdb) n
43                  if (string[k + l] != substring[l])
(gdb) n
41              for (l = 0; l < substringlength; l++)
(gdb) n
48                  if (l == substringlength)
(gdb) n
50                      return k;
(gdb) n
54      }
(gdb) n
main () at problem06.c:13
13          output(string, substring, index);
(gdb) n
the index of 'world' in 'helloworldhello' is 514            return 0;   
(gdb) q
A debugging session is active.

        Inferior 1 [process 5320] will be killed.

Quit anyway? (y or n) y
error return ../../gdb-7.6.1/gdb/windows-nat.c:1275 was 5