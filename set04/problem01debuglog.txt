PS C:\FPC\c_activity_sets\set04> gcc problem01.c -O0 -g
PS C:\FPC\c_activity_sets\set04> gdb a.exe
GNU gdb (GDB) 7.6.1
Copyright (C) 2013 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.        
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "mingw32".
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>...
Reading symbols from C:\FPC\c_activity_sets\set04\a.exe...done.
(gdb) l
1       #include <stdio.h>
2
3       void input(int *num1, int *den1, int *num2, int *den2);
4       void add(int num1, int den1, int num2, int den2, int *res_num, int *res_den);
5       void output(int num1, int den1, int num2, int den2, int res_num, int res_den);
6
7       int main()
8       {
9           int num1, den1, num2, den2, res_num, res_den;
10          input(&num1, &den1, &num2, &den2);
(gdb) b main
Breakpoint 1 at 0x401471: file problem01.c, line 10.
(gdb) r
Starting program: C:\FPC\c_activity_sets\set04/a.exe 
[New Thread 10892.0x2df4]
[New Thread 10892.0x3b50]

Breakpoint 1, main () at problem01.c:10
10          input(&num1, &den1, &num2, &den2);
(gdb) n
Enter the numerator of the first fraction: 1
Enter the denominator of the first fraction: 4
Enter the numerator of the second fraction: 1
Enter the denominator of the second fraction: 2
11          add(num1, den1, num2, den2, &res_num, &res_den);
(gdb) step
add (num1=1, den1=4, num2=1, den2=2, res_num=0x61fefc, res_den=0x61fef8) at problem01.c:30
30          *res_num = num1 * den2 + num2 * den1;
(gdb) n
31          *res_den = den1 * den2;
(gdb) n
32          int gcd = 1;
(gdb) n
33          for (int i = 1; i <= *res_num && i <= *res_den; i++)
(gdb) n
35              if (*res_num % i == 0 && *res_den % i == 0)
(gdb) n
37                  gcd = i;
(gdb) n
33          for (int i = 1; i <= *res_num && i <= *res_den; i++)
(gdb) n
35              if (*res_num % i == 0 && *res_den % i == 0)
(gdb) n
37                  gcd = i;
(gdb) n
33          for (int i = 1; i <= *res_num && i <= *res_den; i++)
(gdb) n
35              if (*res_num % i == 0 && *res_den % i == 0)
(gdb) n
33          for (int i = 1; i <= *res_num && i <= *res_den; i++)
(gdb) n
35              if (*res_num % i == 0 && *res_den % i == 0)
(gdb) n
33          for (int i = 1; i <= *res_num && i <= *res_den; i++)
(gdb) n
35              if (*res_num % i == 0 && *res_den % i == 0)
(gdb) n
33          for (int i = 1; i <= *res_num && i <= *res_den; i++)
(gdb) n
35              if (*res_num % i == 0 && *res_den % i == 0)
(gdb) n
33          for (int i = 1; i <= *res_num && i <= *res_den; i++)
(gdb) n
40          *res_num = *res_num / gcd;
(gdb) n
41          *res_den = *res_den / gcd;
(gdb) n
42      }
(gdb) n
main () at problem01.c:12
12          output(num1, den1, num2, den2, res_num, res_den);
(gdb) n
The sum of 1/4 and 1/2 is 3/413     return 0;
(gdb) n
14      }
(gdb) q
A debugging session is active.

        Inferior 1 [process 10892] will be killed.

Quit anyway? (y or n) y
error return ../../gdb-7.6.1/gdb/windows-nat.c:1275 was 5