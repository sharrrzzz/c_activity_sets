PS C:\FPC\c_activity_sets\set04> gcc problem02.c -O0 -g
PS C:\FPC\c_activity_sets\set04> gdb a.exe
GNU gdb (GDB) 7.6.1
Copyright (C) 2013 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "mingw32".
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>...
Reading symbols from C:\FPC\c_activity_sets\set04\a.exe...done.
(gdb) l
7
8       Fraction input();
9       Fraction find_smallest_fractions(Fraction f1, Fraction f2, Fraction f3);
10      Fraction simplify(Fraction f);
11      void output(Fraction f);
12
13      int main()
14      {
15          Fraction f1, f2, f3, smallest;
16          printf("Enter the first fraction: \n");
(gdb) b main
Breakpoint 1 at 0x40146e: file problem02.c, line 16.
(gdb) r
Starting program: C:\FPC\c_activity_sets\set04/a.exe 
[New Thread 10768.0x1f88]
[New Thread 10768.0x32c0]

Breakpoint 1, main () at problem02.c:16
16          printf("Enter the first fraction: \n");
(gdb) n
Enter the first fraction: 
17          f1 = input();
(gdb) n

Enter the numerator of the fraction: 1

Enter the denominator of the fraction: 2
18          printf("Enter the second fraction: \n");
(gdb) n
Enter the second fraction: 
19          f2 = input();
(gdb) n

Enter the numerator of the fraction: 1

Enter the denominator of the fraction: 3
20          printf("Enter the third fraction: \n");
(gdb) n
Enter the third fraction: 
21          f3 = input();
(gdb) n

Enter the numerator of the fraction: 1

Enter the denominator of the fraction: 5
22          smallest = find_smallest_fractions(f1, f2, f3);
(gdb) step
find_smallest_fractions (f1=..., f2=..., f3=...) at problem02.c:41
41          if (f1.num / f1.den < f2.num / f2.den && f1.num / f1.den < f3.num / f3.den)
(gdb) n
45          else if (f2.num / f2.den < f1.num / f1.den && f2.num / f2.den < f3.num / f3.den)
(gdb)
51              smallest = f3;
(gdb)
53          return smallest;
(gdb) n
54      }
(gdb) n
main () at problem02.c:23
23          smallest = simplify(smallest);
(gdb)
24          output(smallest);
(gdb) n
The smallest fraction is 1/525      return 0;
(gdb) n
26      }
(gdb) q
A debugging session is active.

        Inferior 1 [process 10768] will be killed.

Quit anyway? (y or n) y
error return ../../gdb-7.6.1/gdb/windows-nat.c:1275 was 5